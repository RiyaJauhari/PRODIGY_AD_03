package com.example.stopwatch;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.os.Handler;
import android.os.SystemClock;
import android.view.View;
import android.widget.Chronometer;
import android.widget.ImageButton;

public class MainActivity extends AppCompatActivity {
    Chronometer chronometer;
    ImageButton start,stop;

    private boolean isResume;
    Handler handler;
    long tMilliSec,tStart,tBuff, tUpdate=0l;
    int sec,min,millisec;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        chronometer=findViewById(R.id.chronometer);
        start=findViewById(R.id.start);
        stop=findViewById(R.id.stop);
        handler= new Handler();

        start.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(!isResume){
                    tStart=SystemClock.uptimeMillis();
                    handler.postDelayed(runnable,0);
                    chronometer.start();
                    isResume=true;
                    stop.setVisibility(View.GONE);
                    start.setImageDrawable(getResources().getDrawable(R.drawable.baseline_pause_24));
                }else{
                    tBuff+= tMilliSec;
                    handler.removeCallbacks(runnable);
                    chronometer.stop();
                    isResume=false;
                    stop.setVisibility(View.VISIBLE);
                    start.setImageDrawable(getResources().getDrawable(R.drawable.baseline_play_arrow_24));
                }
            }
        });

        stop.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                if(!isResume){
                    start.setImageDrawable(getResources().getDrawable(R.drawable.baseline_play_arrow_24));

                    tMilliSec=0l;
                    tStart=0l;
                    tBuff=0l;
                    tUpdate=0l;
                    sec=0;
                    min=0;
                    millisec=0;
                    chronometer.setText("00:00:00");
                }
            }
        });
    }

    public  Runnable runnable= new Runnable() {
        @Override
        public void run() {
            tMilliSec= SystemClock.uptimeMillis() - tStart;
            tUpdate= tBuff+ tMilliSec;
            sec= (int) (tUpdate/1000);
            min=sec/60;
            sec= sec%60;
            millisec= (int) (tUpdate%1000);
            chronometer.setText(String.format("%02d",min)+":"+ String.format("%02d",sec)+":"+ String.format("%02d",millisec));
            handler.postDelayed(this,60);
        }
    };
}